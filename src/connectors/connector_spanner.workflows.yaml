# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START workflows_connector_spanner]
# This workflow demonstrates how to use the Spanner connector:
# Write entries to an existing Spanner database
# Your database should have the same schema described in the
# `create_transaction` step
# Expected output: "SUCCESS"
- create_table_entry:
    assign:
      - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
      - spanner_inst: "SPANNER_INSTANCE"  # replace SPANNER_INSTANCE placeholder
      - spanner_db: "SPANNER_DATABASE"  # replace SPANNER_DATABASE placeholder
      - entry: ["123"]
- create_transaction:
    assign:
      - req:
          mutations:
            - insert:
                columns:
                  - ID
                table: Contacts
                values:
                  - ${entry}
          singleUseTransaction:
            readWrite: {}
- create_spanner_session:
    call: googleapis.spanner.v1.projects.instances.databases.sessions.create
    args:
      database: ${"projects/" + project_id + "/instances/" + spanner_inst + "/databases/" + spanner_db}
    result: session
- write_entry:
    call: googleapis.spanner.v1.projects.instances.databases.sessions.commit
    args:
      session: ${session.name}
      body: ${req}
- delete_spanner_session:
    call: googleapis.spanner.v1.projects.instances.databases.sessions.delete
    args:
      name: ${session.name}
- the_end:
    return: SUCCESS
# [END workflows_connector_spanner]
