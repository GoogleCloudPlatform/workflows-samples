# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START workflows_connector_cloudbuild]
# This workflow demonstrates how to use the Cloud Build connector.
# The workflow creates a simple build and the image is stored to an Artifact Registery repo. 
# The workflow assumes a properly defined source tgz file already
# exists in a Cloud Storage bucket: gs://your-project-id_cloudbuild/source/placeholder_src.tgz 
# and a repository "your-project-id-docker-repo" already
# exists in Artifact Registry where the image will be stored.
# The new table and dataset are both deleted in the following steps.
# Expected successful output: "SUCCESS"

- init:
    assign:
    - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
    - location_id: "global"
    - repo: ${project_id + "-docker-repo"}
    - image_path: ${"us-central1-docker.pkg.dev/" + project_id + "/" + repo + "/quickstart-image:tag1"}
- create_build:
    call: googleapis.cloudbuild.v1.projects.builds.create
    args:
      projectId: ${project_id}
      parent: ${"projects/" + project_id + "/locations/" + location_id}
      body:
        source:
          storageSource:
            bucket: ${project_id + "_cloudbuild"}
            object: "source/placeholder_src.tgz"
        steps:
        - name: "gcr.io/cloud-builders/docker"
          args: ["build", "-t", ${image_path}, "."]
        images: [${image_path}]
- the_end:
    return: "SUCCESS"
# [END workflows_connector_cloudbuild]
